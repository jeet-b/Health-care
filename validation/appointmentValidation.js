const joi = require('joi');
exports.schemaKeys = joi.object({
  patientName: joi.string(),
  providerName: joi.string(),
  specialisationName: joi.string(),
  penalty: joi.number(),
  addedBy: joi.string().regex(/^[0-9a-fA-F]{24}$/),
  orderId: joi.string().regex(/^[0-9a-fA-F]{24}$/),
  cardId: joi.string(),
  patientId: joi.string().regex(/^[0-9a-fA-F]{24}$/),
  isAppointmentCompleted: joi.boolean().default(false),
  slotId: joi.string().regex(/^[0-9a-fA-F]{24}$/),
  availableSlotId: joi.string().regex(/^[0-9a-fA-F]{24}$/),
  isBooked: joi.boolean().default(false),
  APID: joi.string(),
  appointmentDateTime: joi.date(),
  cancelledBy: joi.string().regex(/^[0-9a-fA-F]{24}$/),
  noShow: joi.boolean().default(false),
  noShowReason: joi.string().regex(/^[0-9a-fA-F]{24}$/),
  providerId: joi.string().regex(/^[0-9a-fA-F]{24}$/),
  isRescheduled: joi.boolean().default(false),
  rescheduleReason: joi.string().regex(/^[0-9a-fA-F]{24}$/),
  specialisationId: joi.string().regex(/^[0-9a-fA-F]{24}$/),
  cancellationReason: joi.string().regex(/^[0-9a-fA-F]{24}$/),
  isAppointmentStarted: joi.boolean().default(false),
  appointmentStartTime: joi.date(),
  appointmentEndTime: joi.date(),
  appointmentStartTimeActual: joi.date(),
  appointmentEndTimeActual: joi.date(),
  patientIntakeFormId: joi.string().regex(/^[0-9a-fA-F]{24}$/),
  appointmentSummaryId: joi.string().regex(/^[0-9a-fA-F]{24}$/),
  treatmentAvailable: joi.boolean(),
  isReviewAppointment: joi.boolean(),
  invoiceId: joi.string().regex(/^[0-9a-fA-F]{24}$/),
  appointmentFollowUpId: joi.string().regex(/^[0-9a-fA-F]{24}$/),
  treatmentAssignedOn: joi.date(),
  treatmentPaidOn: joi.date(),
  firstTreatmentReminderPaymentMail: joi.date(),
  secondTreatmentReminderPaymentMail: joi.date(),
  firstFollowUpTreatmentMail: joi.date(),
  secondFollowUpTreatmentMail: joi.date(),
  status: joi.object(),
  isPaid: joi.boolean(),
  isFollowUp: joi.boolean(),
  isCancelled: joi.boolean(),
  isTreatmentPaid: joi.boolean(),
  isInterrupted: joi.boolean(),
  canReBook: joi.boolean(),
  isPhysicianDisconnected: joi.boolean(),
  physicianDisconnectedAt: joi.date(),
  isPatientDisconnected: joi.boolean(),
  patientDisconnectedAt: joi.date(),
  isConnected: joi.boolean(),
  patientJoinedAt: joi.date(),
  isPatientJoined: joi.boolean(),
  physicianJoinedAt: joi.date(),
  isPhysicianJoined: joi.boolean(),
  sessionToken: joi.string(),
  sessionId: joi.string(),
  appointmentHistory: joi.string(),
  parentAppointmentId: joi.string().regex(/^[0-9a-fA-F]{24}$/),
  appointmentType: joi.string().regex(/^[0-9a-fA-F]{24}$/),
  createdBy: joi.object(),
  updatedBy: joi.object(),
  isActive: joi.boolean().default(true),
  isDelete: joi.boolean().default(false),
  isDeleted: joi.boolean()
}).unknown(true);
exports.updateSchemaKeys = joi.object({
  patientName: joi.string(),
  providerName: joi.string(),
  specialisationName: joi.string(),
  penalty: joi.number(),
  addedBy: joi.string().regex(/^[0-9a-fA-F]{24}$/),
  orderId: joi.string().regex(/^[0-9a-fA-F]{24}$/),
  cardId: joi.string(),
  patientId: joi.string().regex(/^[0-9a-fA-F]{24}$/),
  isAppointmentCompleted: joi.boolean().default(false),
  slotId: joi.string().regex(/^[0-9a-fA-F]{24}$/),
  availableSlotId: joi.string().regex(/^[0-9a-fA-F]{24}$/),
  isBooked: joi.boolean().default(false),
  APID: joi.string(),
  appointmentDateTime: joi.date(),
  cancelledBy: joi.string().regex(/^[0-9a-fA-F]{24}$/),
  noShow: joi.boolean().default(false),
  noShowReason: joi.string().regex(/^[0-9a-fA-F]{24}$/),
  providerId: joi.string().regex(/^[0-9a-fA-F]{24}$/),
  isRescheduled: joi.boolean().default(false),
  rescheduleReason: joi.string().regex(/^[0-9a-fA-F]{24}$/),
  specialisationId: joi.string().regex(/^[0-9a-fA-F]{24}$/),
  cancellationReason: joi.string().regex(/^[0-9a-fA-F]{24}$/),
  isAppointmentStarted: joi.boolean().default(false),
  appointmentStartTime: joi.date(),
  appointmentEndTime: joi.date(),
  appointmentStartTimeActual: joi.date(),
  appointmentEndTimeActual: joi.date(),
  patientIntakeFormId: joi.string().regex(/^[0-9a-fA-F]{24}$/),
  appointmentSummaryId: joi.string().regex(/^[0-9a-fA-F]{24}$/),
  treatmentAvailable: joi.boolean(),
  isReviewAppointment: joi.boolean(),
  invoiceId: joi.string().regex(/^[0-9a-fA-F]{24}$/),
  appointmentFollowUpId: joi.string().regex(/^[0-9a-fA-F]{24}$/),
  treatmentAssignedOn: joi.date(),
  treatmentPaidOn: joi.date(),
  firstTreatmentReminderPaymentMail: joi.date(),
  secondTreatmentReminderPaymentMail: joi.date(),
  firstFollowUpTreatmentMail: joi.date(),
  secondFollowUpTreatmentMail: joi.date(),
  status: joi.object(),
  isPaid: joi.boolean(),
  isFollowUp: joi.boolean(),
  isCancelled: joi.boolean(),
  isTreatmentPaid: joi.boolean(),
  isInterrupted: joi.boolean(),
  canReBook: joi.boolean(),
  isPhysicianDisconnected: joi.boolean(),
  physicianDisconnectedAt: joi.date(),
  isPatientDisconnected: joi.boolean(),
  patientDisconnectedAt: joi.date(),
  isConnected: joi.boolean(),
  patientJoinedAt: joi.date(),
  isPatientJoined: joi.boolean(),
  physicianJoinedAt: joi.date(),
  isPhysicianJoined: joi.boolean(),
  sessionToken: joi.string(),
  sessionId: joi.string(),
  appointmentHistory: joi.string(),
  parentAppointmentId: joi.string().regex(/^[0-9a-fA-F]{24}$/),
  appointmentType: joi.string().regex(/^[0-9a-fA-F]{24}$/),
  createdBy: joi.object(),
  updatedBy: joi.object(),
  isActive: joi.boolean().default(true),
  isDelete: joi.boolean().default(false),
  isDeleted: joi.boolean()
}).unknown(true);
