const joi = require('joi');
const { USER_ROLE } = require('../config/authConstant');
const { convertObjectToEnum } = require('../utils/common');   
exports.schemaKeys = joi.object({
  isVerified: joi.boolean().default(false),
  firstName: joi.string(),
  lastName: joi.string(),
  genderId: joi.string().regex(/^[0-9a-fA-F]{24}$/),
  dob: joi.date(),
  emails: joi.array().items(),
  phones: joi.array().items(),
  password: joi.string(),
  qualifications_and_current_position: joi.string(),
  accomplishments: joi.string(),
  languageIds: joi.array(),
  favouriteActivity: joi.string(),
  stripeCustomerId: joi.string(),
  rewarding_part_of_practice: joi.string(),
  uniquePractitioner: joi.string(),
  specialisations: joi.array().items(),
  APDNumber: joi.string(),
  practiceAddressId: joi.string().regex(/^[0-9a-fA-F]{24}$/),
  profilePictureId: joi.string().regex(/^[0-9a-fA-F]{24}$/),
  isApproved: joi.boolean().default(false),
  slots: joi.array(),
  repeatUntilDate: joi.date(),
  referalBy: joi.string(),
  referalCode: joi.string(),
  occupation: joi.string(),
  libraryPhotos: joi.array().items(),
  hearAboutUs: joi.string().regex(/^[0-9a-fA-F]{24}$/),
  shippingAddress: joi.string().regex(/^[0-9a-fA-F]{24}$/),
  preferredTimeZone: joi.string(),
  roleIds: joi.array().items(),
  cards: joi.array().items(),
  uniqueId: joi.string(),
  deactivationReason: joi.string().regex(/^[0-9a-fA-F]{24}$/),
  averageRating: joi.number().integer(),
  createdBy: joi.object(),
  updatedBy: joi.object(),
  deletedBy: joi.object(),
  deletedAt: joi.date(),
  isActive: joi.boolean().default(true),
  isDelete: joi.boolean().default(false),
  phone: joi.string().required(),
  email: joi.string().required(),
  name: joi.string().required(),
  resetPasswordLink: joi.object({
    code:joi.string(),
    expireTime:joi.date()
  }),
  isDeleted: joi.boolean()
}).unknown(true);
exports.updateSchemaKeys = joi.object({
  stripeCustomerId: joi.string(),
  isVerified: joi.boolean().default(false),
  firstName: joi.string(),
  lastName: joi.string(),
  genderId: joi.string().regex(/^[0-9a-fA-F]{24}$/),
  dob: joi.date(),
  emails: joi.array().items(),
  phones: joi.array().items(),
  password: joi.string().when({
    is:joi.exist(),
    then:joi.required(),
    otherwise:joi.optional()
  }),
  qualifications_and_current_position: joi.string(),
  accomplishments: joi.string(),
  languageIds: joi.array(),
  favouriteActivity: joi.string(),
  rewarding_part_of_practice: joi.string(),
  uniquePractitioner: joi.string(),
  specialisations: joi.array().items(),
  APDNumber: joi.string(),
  practiceAddressId: joi.string().regex(/^[0-9a-fA-F]{24}$/),
  profilePictureId: joi.string().regex(/^[0-9a-fA-F]{24}$/),
  isApproved: joi.boolean().default(false),
  slots: joi.array(),
  repeatUntilDate: joi.date(),
  referalBy: joi.string(),
  referalCode: joi.string(),
  occupation: joi.string(),
  libraryPhotos: joi.array().items(),
  hearAboutUs: joi.string().regex(/^[0-9a-fA-F]{24}$/),
  shippingAddress: joi.string().regex(/^[0-9a-fA-F]{24}$/),
  name: joi.string(),
  preferredTimeZone: joi.string(),
  roleIds: joi.array().items(),
  cards: joi.array().items(),
  uniqueId: joi.string(),
  deactivationReason: joi.string().regex(/^[0-9a-fA-F]{24}$/),
  averageRating: joi.number().integer(),
  createdBy: joi.object(),
  updatedBy: joi.object(),
  deletedBy: joi.object(),
  deletedAt: joi.date(),
  isActive: joi.boolean().default(true),
  isDelete: joi.boolean().default(false),
  email: joi.string().when({
    is:joi.exist(),
    then:joi.required(),
    otherwise:joi.optional()
  }),
  phone: joi.string().when({
    is:joi.exist(),
    then:joi.required(),
    otherwise:joi.optional()
  }),
  resetPasswordLink: joi.object({
    code:joi.string(),
    expireTime:joi.date()
  }),
  isDeleted: joi.boolean()
}).unknown(true);
